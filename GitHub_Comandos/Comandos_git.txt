# Comandos do Git Hub

Git clone: é você clonar um repositorio remoto em sua máquina local

Git branch: é você listar as ramificações que existem em um determinado repositório

-----------Problemas---------

É importante que cada desenvolvedor trabalhe em sua branch para diminuir conflito nos commits
 - problema: sobrescrever códigos execultados.
 - Soluação: trabalhar em branchs diferentes
 
 Obs: Várias branchs para um mesmo projeto


----------Download-----------

link: https://git-scm.com/downloads


-----------------------------

git init: Para iniciar um repositório em uma pasta local do seu computador

%%%%%%%%%%%%%
% Git Clone %
%%%%%%%%%%%%%

O git clone é um comando para baixar o código-fonte existente de um repositório remoto (como o Github,por exemplo)

git clone <URL>

%%%%%%%%%%%%%%
% Git branch %
%%%%%%%%%%%%%%

Pode-se usar o comando git branch para criar, listar e excluir branches. Criando uma nova branch: (cria branch local)

git branch <nome-do-branch>

Para ver as branches: 

git branch

git branch --list

----

Deletando uma branch:

git branch -d <nome-da-branch>

%%%%%%%%%%%%%%%%%
% Git Check Out %
%%%%%%%%%%%%%%%%%

 - Git Check Out: uma das mais utilizadas
 
Usamos git check Out quando queremos alterar de uma branch para outra
 - também pode ser utilizada para verificar arquivos e commits
 
 git checkout <nome-da-branch>

Atalho: permite criar e alternar para uma branch ao mesmo tempo

git checkout -b <nome-da-branch>

%%%%%%%%%%%%%%
% Git Status %
%%%%%%%%%%%%%%

Fornece todas as informações necessárias sobre a branch atual
 - por exemplo: alteração não comitada, alteração em arquivos

git status

%%%%%%%%%%%
% Git Add %
%%%%%%%%%%%

Permite incluir as alterações em um arquivo no nosso próximo commit

 - Para adicionar um arquivo:
 git add <arquivo>
 
 - Para adicionar tudo de uma vez
 git add -A
 git add *

%%%%%%%%%%%%%%
% Git Commit %
%%%%%%%%%%%%%%

Este comando defini um ponto de verificação no processo de desenvolvimento para o qual você pode voltar mais tarde, se necessário

 git commit -m "mensagem explicando a mudança no código"

%%%%%%%%%%%%
% Git Push %
%%%%%%%%%%%%

O comando git push envia e salva suas confirmações no repositório remoto

git push <remote> <nome-do-branch>

No entanto, se seu branch for criado recentemente, você também precisará fazer upload do branch com o seguinte comando:

git push -u origin <nome-do-branch>


Para enviar a nova branch para o repositório remoto, você precisa usar o seguinte comando:

git push -u <remote> <nome-da-branch>

%%%%%%%%%%%%
% Git Pull %
%%%%%%%%%%%%

O comando git pull é usado para obter atualizações do respositório remoto

git pull <remote>





